{
  "address": "0x5d54080D283998Abc38B840636Ae96FA6667dDA7",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "MyLog",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_cEtherAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_comptrollerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_cTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_underlyingAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_underlyingToSupplyAsCollateral",
          "type": "uint256"
        }
      ],
      "name": "borrowEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x73807246d4e41c16dadcf5350a34efda273cb2c237e06a7c483c88545ec560d0",
  "receipt": {
    "to": null,
    "from": "0xB1cA3Be76f7a6711ceb3c61754922D0FAE38b52f",
    "contractAddress": "0x5d54080D283998Abc38B840636Ae96FA6667dDA7",
    "transactionIndex": 20,
    "gasUsed": "1119839",
    "logsBloom": "0x
    "blockHash": "0xc6c4b09ffabfaa34ea5418fe86b7afd8ef1aa5ba1fbed6b364cab0b881b59423",
    "transactionHash": "0x73807246d4e41c16dadcf5350a34efda273cb2c237e06a7c483c88545ec560d0",
    "logs": [],
    "blockNumber": 9734156,
    "cumulativeGasUsed": "4053038",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "e7a30a69053eedcaede7608251db2843",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"MyLog\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_cEtherAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_comptrollerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_underlyingAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_underlyingToSupplyAsCollateral\",\"type\":\"uint256\"}],\"name\":\"borrowEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Compound.sol\":\"Compound\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Compound.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\ninterface Erc20 {\\r\\n    function approve(address, uint256) external returns (bool);\\r\\n\\r\\n    function transfer(address, uint256) external returns (bool);\\r\\n}\\r\\n\\r\\ninterface CErc20 {\\r\\n    function mint(uint256) external returns (uint256);\\r\\n\\r\\n    function borrow(uint256) external returns (uint256);\\r\\n\\r\\n    function borrowRatePerBlock() external view returns (uint256);\\r\\n\\r\\n    function borrowBalanceCurrent(address) external returns (uint256);\\r\\n\\r\\n    function repayBorrow(uint256) external returns (uint256);\\r\\n}\\r\\n\\r\\ninterface CEth {\\r\\n    function mint() external payable;\\r\\n\\r\\n    function borrow(uint256) external returns (uint256);\\r\\n\\r\\n    function repayBorrow() external payable;\\r\\n\\r\\n    function borrowBalanceCurrent(address) external returns (uint256);\\r\\n\\r\\n    function borrowRatePerBlock() external view returns (uint256);\\r\\n}\\r\\n\\r\\ninterface Comptroller {\\r\\n    function markets(address) external returns (bool, uint256);\\r\\n\\r\\n    //\\r\\n    function enterMarkets(address[] calldata) \\r\\n        external\\r\\n        returns (uint256[] memory);\\r\\n\\r\\n    function getAccountLiquidity(address)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface PriceFeed {\\r\\n    function getUnderlyingPrice(address cToken) external view returns (uint256);\\r\\n}\\r\\n\\r\\ncontract Compound {\\r\\n    event MyLog(string, uint256);\\r\\n\\r\\n    struct BorrowInfo {\\r\\n        address payable _cEtherAddress;\\r\\n        address _comptrollerAddress;\\r\\n        address _cTokenAddress;\\r\\n        address _underlyingAddress;\\r\\n        uint256 _underlyingToSupplyAsCollateral;\\r\\n        uint256 borrows;\\r\\n    }\\r\\n\\r\\n    function borrowEth(\\r\\n        address payable _cEtherAddress, //\\r\\n        address _comptrollerAddress,\\r\\n        address _cTokenAddress, //\\r\\n        address _underlyingAddress,\\r\\n        uint256 _underlyingToSupplyAsCollateral\\r\\n    ) public returns (uint256) {\\r\\n        BorrowInfo memory borrowInfo;\\r\\n\\r\\n        borrowInfo._cEtherAddress = _cEtherAddress;\\r\\n        borrowInfo._comptrollerAddress = _comptrollerAddress;\\r\\n        borrowInfo._cTokenAddress = _cTokenAddress;\\r\\n        borrowInfo._underlyingAddress = _underlyingAddress;\\r\\n        borrowInfo._underlyingToSupplyAsCollateral = _underlyingToSupplyAsCollateral;\\r\\n\\r\\n        CEth cEth = CEth(borrowInfo._cEtherAddress);\\r\\n        Comptroller comptroller = Comptroller(borrowInfo._comptrollerAddress);\\r\\n        CErc20 cToken = CErc20(borrowInfo._cTokenAddress);\\r\\n        Erc20 underlying = Erc20(borrowInfo._underlyingAddress);\\r\\n        // Approve transfer of underlying\\r\\n        underlying.approve(\\r\\n            borrowInfo._cTokenAddress,\\r\\n            borrowInfo._underlyingToSupplyAsCollateral\\r\\n        );\\r\\n\\r\\n        // Supply underlying as collateral, get cToken in return\\r\\n        uint256 error = cToken.mint(borrowInfo._underlyingToSupplyAsCollateral);\\r\\n        require(error != 0, \\\"CErc20.mint Error\\\");\\r\\n\\r\\n        // Enter the market so you can borrow another type of asset\\r\\n        address[] memory cTokens = new address[](1);\\r\\n        cTokens[0] = borrowInfo._cTokenAddress;\\r\\n        uint256[] memory errors = comptroller.enterMarkets(cTokens);\\r\\n        if (errors[0] != 0) {\\r\\n            revert(\\\"Comptroller.enterMarkets failed.\\\");\\r\\n        }\\r\\n\\r\\n        // Get my account's total liquidity value in Compound\\r\\n        (uint256 error2, uint256 liquidity, uint256 shortfall) = comptroller\\r\\n            .getAccountLiquidity(msg.sender);\\r\\n        if (error2 != 0) {\\r\\n            revert(\\\"Comptroller.getAccountLiquidity failed.\\\");\\r\\n        }\\r\\n        require(shortfall == 0, \\\"account underwater\\\");\\r\\n        // require(liquidity > 1, \\\"account has excess collateral\\\");\\r\\n\\r\\n        // Borrowing near the max amount will result\\r\\n        // in your account being liquidated instantly\\r\\n        emit MyLog(\\\"Maximum ETH Borrow (borrow far less!)\\\", liquidity);\\r\\n\\r\\n        // Get the collateral factor for our collateral\\r\\n        (bool isListed, uint256 collateralFactorMantissa) = comptroller.markets(\\r\\n            borrowInfo._cTokenAddress\\r\\n        );\\r\\n        emit MyLog(\\\"Collateral Factor\\\", collateralFactorMantissa);\\r\\n\\r\\n        // Get the amount of ETH added to your borrow each block\\r\\n        uint256 borrowRateMantissa = cEth.borrowRatePerBlock();\\r\\n        emit MyLog(\\\"Current ETH Borrow Rate\\\", borrowRateMantissa);\\r\\n\\r\\n        // Borrow a fixed amount of ETH below our maximum borrow amount\\r\\n        uint256 numWeiToBorrow = 2000000000000000; // 0.002 ETH\\r\\n\\r\\n        // Borrow, then check the underlying balance for this contract's address\\r\\n        cEth.borrow(numWeiToBorrow);\\r\\n\\r\\n        borrowInfo.borrows = cEth.borrowBalanceCurrent(msg.sender);\\r\\n        emit MyLog(\\\"Current ETH borrow amount\\\", borrowInfo.borrows);\\r\\n\\r\\n        return borrowInfo.borrows;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3d72843994073034aee7f61ce676a2cae7058f44e270474c834e20dc0c017d05\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061135d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063eb34828a14610030575b600080fd5b61004a60048036038101906100459190610a69565b610060565b6040516100579190610f73565b60405180910390f35b600061006a6108d4565b86816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505085816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505084816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050828160800181815250506000816000015190506000826020015190506000836040015190506000846060015190508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3866040015187608001516040518363ffffffff1660e01b81526004016101bb929190610df0565b602060405180830381600087803b1580156101d557600080fd5b505af11580156101e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020d9190610b2d565b5060008273ffffffffffffffffffffffffffffffffffffffff1663a0712d6887608001516040518263ffffffff1660e01b815260040161024d9190610f73565b602060405180830381600087803b15801561026757600080fd5b505af115801561027b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029f9190610b9a565b905060008114156102e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102dc90610f33565b60405180910390fd5b6000600167ffffffffffffffff811115610302576103016110e3565b5b6040519080825280602002602001820160405280156103305781602001602082028036833780820191505090505b50905086604001518160008151811061034c5761034b6110b4565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008573ffffffffffffffffffffffffffffffffffffffff1663c2998238836040518263ffffffff1660e01b81526004016103c19190610e19565b600060405180830381600087803b1580156103db57600080fd5b505af11580156103ef573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104189190610ae4565b90506000816000815181106104305761042f6110b4565b5b602002602001015114610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046f90610e97565b60405180910390fd5b60008060008873ffffffffffffffffffffffffffffffffffffffff16635ec88c79336040518263ffffffff1660e01b81526004016104b69190610dd5565b60606040518083038186803b1580156104ce57600080fd5b505afa1580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105069190610bc7565b9250925092506000831461054f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054690610f53565b60405180910390fd5b60008114610592576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058990610f13565b60405180910390fd5b7f8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad826040516105c19190610eb7565b60405180910390a16000808a73ffffffffffffffffffffffffffffffffffffffff16638e8f294b8e604001516040518263ffffffff1660e01b81526004016106099190610dd5565b6040805180830381600087803b15801561062257600080fd5b505af1158015610636573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065a9190610b5a565b915091507f8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad8160405161068d9190610ee5565b60405180910390a160008c73ffffffffffffffffffffffffffffffffffffffff1663f8f9da286040518163ffffffff1660e01b815260040160206040518083038186803b1580156106dd57600080fd5b505afa1580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107159190610b9a565b90507f8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad816040516107469190610e69565b60405180910390a1600066071afd498d000090508d73ffffffffffffffffffffffffffffffffffffffff1663c5ebeaec826040518263ffffffff1660e01b81526004016107939190610f73565b602060405180830381600087803b1580156107ad57600080fd5b505af11580156107c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e59190610b9a565b508d73ffffffffffffffffffffffffffffffffffffffff166317bfdfbc336040518263ffffffff1660e01b815260040161081f9190610dd5565b602060405180830381600087803b15801561083957600080fd5b505af115801561084d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108719190610b9a565b8f60a00181815250507f8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad8f60a001516040516108ad9190610e3b565b60405180910390a18e60a001519f5050505050505050505050505050505095945050505050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b600061097561097084610fb3565b610f8e565b9050808382526020820190508285602086028201111561099857610997611117565b5b60005b858110156109c857816109ae8882610a54565b84526020840193506020830192505060018101905061099b565b5050509392505050565b6000813590506109e1816112cb565b92915050565b6000813590506109f6816112e2565b92915050565b600082601f830112610a1157610a10611112565b5b8151610a21848260208601610962565b91505092915050565b600081519050610a39816112f9565b92915050565b600081359050610a4e81611310565b92915050565b600081519050610a6381611310565b92915050565b600080600080600060a08688031215610a8557610a84611121565b5b6000610a93888289016109e7565b9550506020610aa4888289016109d2565b9450506040610ab5888289016109d2565b9350506060610ac6888289016109d2565b9250506080610ad788828901610a3f565b9150509295509295909350565b600060208284031215610afa57610af9611121565b5b600082015167ffffffffffffffff811115610b1857610b1761111c565b5b610b24848285016109fc565b91505092915050565b600060208284031215610b4357610b42611121565b5b6000610b5184828501610a2a565b91505092915050565b60008060408385031215610b7157610b70611121565b5b6000610b7f85828601610a2a565b9250506020610b9085828601610a54565b9150509250929050565b600060208284031215610bb057610baf611121565b5b6000610bbe84828501610a54565b91505092915050565b600080600060608486031215610be057610bdf611121565b5b6000610bee86828701610a54565b9350506020610bff86828701610a54565b9250506040610c1086828701610a54565b9150509250925092565b6000610c268383610c32565b60208301905092915050565b610c3b81611029565b82525050565b610c4a81611029565b82525050565b6000610c5b82610fef565b610c658185611007565b9350610c7083610fdf565b8060005b83811015610ca1578151610c888882610c1a565b9750610c9383610ffa565b925050600181019050610c74565b5085935050505092915050565b6000610cbb601983611018565b9150610cc682611137565b602082019050919050565b6000610cde601783611018565b9150610ce982611160565b602082019050919050565b6000610d01602083611018565b9150610d0c82611189565b602082019050919050565b6000610d24602583611018565b9150610d2f826111b2565b604082019050919050565b6000610d47601183611018565b9150610d5282611201565b602082019050919050565b6000610d6a601283611018565b9150610d758261122a565b602082019050919050565b6000610d8d601183611018565b9150610d9882611253565b602082019050919050565b6000610db0602783611018565b9150610dbb8261127c565b604082019050919050565b610dcf81611079565b82525050565b6000602082019050610dea6000830184610c41565b92915050565b6000604082019050610e056000830185610c41565b610e126020830184610dc6565b9392505050565b60006020820190508181036000830152610e338184610c50565b905092915050565b60006040820190508181036000830152610e5481610cae565b9050610e636020830184610dc6565b92915050565b60006040820190508181036000830152610e8281610cd1565b9050610e916020830184610dc6565b92915050565b60006020820190508181036000830152610eb081610cf4565b9050919050565b60006040820190508181036000830152610ed081610d17565b9050610edf6020830184610dc6565b92915050565b60006040820190508181036000830152610efe81610d3a565b9050610f0d6020830184610dc6565b92915050565b60006020820190508181036000830152610f2c81610d5d565b9050919050565b60006020820190508181036000830152610f4c81610d80565b9050919050565b60006020820190508181036000830152610f6c81610da3565b9050919050565b6000602082019050610f886000830184610dc6565b92915050565b6000610f98610fa9565b9050610fa48282611083565b919050565b6000604051905090565b600067ffffffffffffffff821115610fce57610fcd6110e3565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061103482611059565b9050919050565b600061104682611059565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61108c82611126565b810181811067ffffffffffffffff821117156110ab576110aa6110e3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f43757272656e742045544820626f72726f7720616d6f756e7400000000000000600082015250565b7f43757272656e742045544820426f72726f772052617465000000000000000000600082015250565b7f436f6d7074726f6c6c65722e656e7465724d61726b657473206661696c65642e600082015250565b7f4d6178696d756d2045544820426f72726f772028626f72726f7720666172206c60008201527f6573732129000000000000000000000000000000000000000000000000000000602082015250565b7f436f6c6c61746572616c20466163746f72000000000000000000000000000000600082015250565b7f6163636f756e7420756e64657277617465720000000000000000000000000000600082015250565b7f4345726332302e6d696e74204572726f72000000000000000000000000000000600082015250565b7f436f6d7074726f6c6c65722e6765744163636f756e744c69717569646974792060008201527f6661696c65642e00000000000000000000000000000000000000000000000000602082015250565b6112d481611029565b81146112df57600080fd5b50565b6112eb8161103b565b81146112f657600080fd5b50565b6113028161104d565b811461130d57600080fd5b50565b61131981611079565b811461132457600080fd5b5056fea2646970667358221220c965bc7b5c931d037f80efd145652ba17677415e2fc21d7283ec0d3321541a1d64736f6c63430008060033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}